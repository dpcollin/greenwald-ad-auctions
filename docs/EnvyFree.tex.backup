\documentclass[12pt,letterpaper]{article}
\usepackage{fullpage}
\usepackage[top=2cm, bottom=4.5cm, left=2.5cm, right=2.5cm]{geometry}
\usepackage{amsmath,amsthm,amsfonts,amssymb,amscd}
\usepackage{lastpage}
\usepackage{enumerate}
\usepackage{fancyhdr}
\usepackage{mathrsfs}
\usepackage{graphicx}
\usepackage{tikz}
\usepackage{mathtools}
\usepackage{algorithm}
\usepackage{algpseudocode}
\usepackage{tcolorbox}
\usetikzlibrary{positioning,chains,fit,shapes,calc}
%% download this package and put it in the same directory as this file
%\usepackage{clrscode3e}
\setlength{\parindent}{0.0in}
\setlength{\parskip}{0.05in}

\newcommand{\Campaign}{c}
\newcommand{\CampaignIndex}{j}
\newcommand{\Campaigns}{C}
\newcommand{\CardinalityCampaigns}{m}
\newcommand{\User}{u}
\newcommand{\UserIndex}{i}
\newcommand{\Users}{U}
\newcommand{\CardinalityUsers}{n}
\newcommand{\Market}{M}
\newcommand{\Impressions}{I}
\newcommand{\Reward}{R}
\newcommand{\NumberOfUsers}{N}
\newcommand{\Edges}{E}
\newcommand{\Allocation}{A}
\newcommand{\Price}{P}
\newcommand{\AllocationMatrix}{X}
\newcommand{\AllocationMatrixEntry}{x}



\begin{document}


\section*{Envy-Free Prices}

\textbf{Notation:}

\begin{enumerate}
	\item[$\Campaign_\CampaignIndex$] is a single campaign
	\begin{enumerate}
		\item[$\Impressions_\CampaignIndex$] is a a positive integer value denoting the number of impressions to be fulfilled by a campaign $\Campaign_\CampaignIndex$
		\item[$\Reward_\CampaignIndex$] is a positive integer value representing the reward attained by a campaign $\Campaign_\CampaignIndex$ if it is entirely fulfilled. 
	\end{enumerate}
	\item[$\Campaigns$] $= \{\Campaign_1,\Campaign_2,\ldots \Campaign_\CardinalityCampaigns\}$ is a set of campaigns. We will use the shorthand $\CardinalityCampaigns = |\Campaigns|$.
	\item[$\User_\UserIndex$] is a user class
	\begin{enumerate}
		\item[$\NumberOfUsers_\UserIndex$] is a positive integer value representing the number of users in a user class $\User_\UserIndex$
	\end{enumerate}
	\item[$\Users$] $= \{\User_1,\User_2,\ldots, \User_\CardinalityUsers\}$ is a set of user classes. We will use the shorthand $\CardinalityUsers = |\Users|$.
	\item[$\Market$] is a market segment denoted by a string from the alphabet $\{F,M,Y,O,H,L\}$ satisfying $(F+M)^{0,1}(Y+O)^{0,1}(H+L)^{0,1}$.
	\item[$\Edges$] is a set of undirected edges between $\Users$ and $\Campaigns$.
\end{enumerate}


\textbf{Definitions:} 

\begin{enumerate}
	\item \textbf{Campaign:} a campaign $\Campaign_\CampaignIndex$ is a triplet $(\Market_\CampaignIndex,\Impressions_\CampaignIndex,\Reward_\CampaignIndex)$.  
	\item \textbf{User class:} a user class $\User_\UserIndex$ is a pair $(\Market_\UserIndex,\NumberOfUsers_\UserIndex)$ where $\Market_\UserIndex$ 
				  is a combination of precisely 3 letters, i.e., $(F+M)^1(Y+O)^1(H+L)^1$
	\item \textbf{Market:} a market is a bipartite graph $(\Users,\Campaigns,\Edges)$ with partitions $\Users$ and $\Campaigns$ and edges $\Edges$. 
				  An edge $(\User_\UserIndex,\Campaign_\CampaignIndex) \in \Edges$ exists between user class $\User_\UserIndex \in \Users$ and campaign 
				  $\Campaign_\CampaignIndex \in \Campaigns$ if and only if market segment $\Market_\CampaignIndex$ from $\Campaign_\CampaignIndex$ 
				  is a substring of $\Market_\UserIndex$ from $\User_\UserIndex$. 
				  For example:

\definecolor{myblue}{RGB}{80,80,160}
\definecolor{mygreen}{RGB}{80,160,80}
$$
\begin{tikzpicture}[thick,
  every node/.style={draw,circle},
  fsnode/.style={fill=myblue},
  ssnode/.style={fill=mygreen},
  every fit/.style={circle,draw,inner sep=5pt,text width=2cm,minimum width=170pt,},
  -,shorten >= 3pt,shorten <= 3pt
]

% the vertices of U
\begin{scope}[start chain=going below,node distance=6mm,inner sep=2.5pt]
  \node[fsnode,on chain] (f1) [label=left: \text{(500,FYL})] {};
  \node[fsnode,on chain] (f2) [label=left: \text{(200,FYH})] {};
  \node[fsnode,on chain] (f3) [label=left: \text{(100,FOL})] {};
  \node[fsnode,on chain] (f4) [label=left: \text{(400,FOH})] {};
  \node[fsnode,on chain] (f5) [label=left: \text{(50,MYL})] {};
\end{scope}

% the vertices of V
\begin{scope}[xshift=8cm,yshift=-1.25cm,start chain=going below,node distance=6mm]
  \node[ssnode,on chain] (s6) [label=right: \text{(F,900,\$60)}] {};
  \node[ssnode,on chain] (s7) [label=right: \text{(FY,500,\$50)}] {};
\end{scope}

% the set U
\node [myblue,fit=(f1) (f5),label=above:$\Users$] {};
% the set V
\node [mygreen,fit=(s6) (s7),label=above:$\Campaigns$] {};

% the edges
\draw (f1) -- (s6);
\draw (f1) -- (s7);
\draw (f2) -- (s6);
\draw (f2) -- (s7);
\draw (f3) -- (s6);
\draw (f4) -- (s6);
\end{tikzpicture}
$$
In the previous example we have 2 campaigns: $\Campaign_1 = (F,900,60)$ and $\Campaign_2 = (FY,500,50)$, and 5 user classes: $\User_1 = (FYL,500), \User_2 = (FYH,200), \User_3 = (FOL,100), 
\User_4 = (FOH,400)$ and $\User_5 = (MYL,50)$. Campaign $\Campaign_1$ is connected to users classes $\User_1,\User_2,\User_3$ and $\User_4$ because $F$ is a sub-string of their respective 
market segments. Contrast this with campaign $\Campaign_2$ which is connected only to user classes $\User_1$ and $\User_2$ since these are the only user classes with market segments for which $FY$ 
is a sub-string. Finally, note that user $\User_5$ is not connected with any campaign because there isn't any campaign with a market that is a sub-string of $MYL$.

\item \textbf{Allocation:} an allocation $\Allocation$ is a labeling $w(\User_\UserIndex,\Campaign_\CampaignIndex)$ of $\Edges$ by positive integers that represents how many of $\NumberOfUsers_\UserIndex$ 
			    is allocated to campaign $\Campaign_\CampaignIndex$. An allocation can be represented as a matrix.
\item \textbf{Allocation Matrix:} a matrix $\AllocationMatrix$ is a representation of an allocation. An entry $\AllocationMatrixEntry_{ij}$ of an allocation matrix $\AllocationMatrix$ is a positive integer value that represents how many of $\NumberOfUsers_\UserIndex$ from
$\User_i$ are allocated to campaign $\Campaign_j$. As a convention $\forall i,j:$ if $(\User_\UserIndex,\Campaign_\CampaignIndex)\notin \Edges$ then $\AllocationMatrixEntry_{\UserIndex\CampaignIndex} = 0$

For example, the following matrix is an allocation for the previous example market:
	\[
		\bordermatrix{& \Campaign_1 & \Campaign_2\cr
                	\User_1& 100 	&  400  \cr
                	\User_2& 100  	&  100 \cr
                	\User_3& 100  	&  0 \cr
                	\User_4& 400 	&  0 \cr
                	\User_5& 0  		&  0       }
	\]
\item \textbf{Feasible Allocation:} 
	an allocation matrix $\AllocationMatrix$ is feasible if
	$$\forall i: \sum\limits_{j=1}^\CardinalityCampaigns \AllocationMatrixEntry_{ij} \le \NumberOfUsers_{i}$$

\item \textbf{Campaign Reward:} Given a feasible allocation $X$, campaign $\Campaign_\CampaignIndex$ produces reward $\Reward_\CampaignIndex$ only if it is completely satisfied, i.e., if $\sum\limits_{i=1}^\CardinalityUsers \AllocationMatrixEntry_{\UserIndex\CampaignIndex} \ge I_\CampaignIndex$.
	
\item \textbf{Reward for an allocation:} a feasible allocation $\AllocationMatrix$ produces a reward $\Reward(\AllocationMatrix) = \sum\limits_{j=1}^\CardinalityCampaigns \Reward_\CampaignIndex$

\item \textbf{Efficient Allocation:} a feasible allocation $X$ is efficient if it maximizes rewards over all feasible allocations. If we let $F$ be the set of all feasible allocations, then $X$ is efficient if and only if:
 $$X\in\arg\max\limits_{\AllocationMatrix'\in F}\{\Reward(\AllocationMatrix')\}$$

\item \textbf{Bundle:} the bundle received by campaign $\Campaign_\CampaignIndex$ is the $j$-th column of the allocation matrix, denoted as $\AllocationMatrixEntry_{*j}$

\item \textbf{Price mapping:} a mapping $P: \Users \mapsto \mathbb{R}^+$ is a mapping from user classes to prices. It represents the price per one unit of user class.
We will use the shorthand $\Price_\UserIndex\equiv\Price(\UserIndex)$.


\end{enumerate}

\section*{Efficient Allocation is NP-hard}

Finding an efficient allocation is the following optimization problem:
\begin{equation*}
\begin{aligned}
& \underset{}{\text{maximize}}
& & \sum\limits_{\CampaignIndex=1}^\CardinalityCampaigns \Reward_\CampaignIndex y_\CampaignIndex  \\
& \text{subject to}
& & \forall \User_\UserIndex: \sum\limits_{j=1}^\CardinalityCampaigns \AllocationMatrixEntry_{\UserIndex\CampaignIndex} \le \NumberOfUsers_\UserIndex
\end{aligned}
\end{equation*}
where $y_j$ is the following indicator function:

\[
 y_\CampaignIndex =
  \begin{cases} 
      \hfill 1 \hfill & \text{ if } \sum\limits_{\UserIndex=1}^\CardinalityUsers \AllocationMatrixEntry_{ij} \ge \Impressions_\CampaignIndex \\
      \hfill 0 \hfill & \text{ otherwise } \\
  \end{cases}
\]

\underline{Proof:}
We want to reduce the following version of set cover to the problem of finding an efficient allocation:

\underline{Set Cover Problem:}
\begin{enumerate}
 \item[Inputs:]
 \begin{enumerate}
  \item[]Universe $U = \{u_1,u_2,\ldots,u_n\}$
  \item[]Subsets $S_1,S_2,\ldots,S_k \subseteq U$
  \item[]Costs $c_1,c_2,\ldots,c_k$
 \end{enumerate}
 \item[Goal:]
  Find a set $I\subseteq\{1,2,\ldots,m\}$ that minimizes $\sum\limits_{i\in I}c_i$, such that $\bigcup\limits_{i\in I} S_i = U$

\end{enumerate}

\section*{Integer linear program for Efficient Allocations}


$$\begin{tabular}{ll}
   maximize & $\sum\limits_{j=1}^\CardinalityCampaigns \Reward_\CampaignIndex y_\CampaignIndex, \text{where } y_\CampaignIndex \in \{0,1\}$ \\\\
   subject to & (1) $\forall \User_\UserIndex: \sum\limits_{\CampaignIndex=1}^\CardinalityCampaigns \AllocationMatrixEntry_{ij} \le \NumberOfUsers_\UserIndex$ \\\\
	      & (2) $\forall \User_\UserIndex,\Campaign_\CampaignIndex:$ If $(\User_\UserIndex,\Campaign_\CampaignIndex) \notin \Edges$ then $\AllocationMatrixEntry_{\UserIndex\CampaignIndex} = 0$ \\\\
	      & (3) $\forall \Campaign_\CampaignIndex: y_\CampaignIndex \le \dfrac{1}{\Impressions_\CampaignIndex}\sum\limits_{\UserIndex = 1}^\CardinalityUsers \AllocationMatrixEntry_{\UserIndex\CampaignIndex} \le 1$
  \end{tabular}
$$

\section*{Defining Envy-Free prices}
Given a feasible allocation $\AllocationMatrix$, an \underline{envy-free price set} $\{\Price_1,\Price_2,\ldots,\Price_\CardinalityUsers\}$ is an assignment of prices to user classes so that every campaign is happy with the bundle it receives.\\


Mathematically, a set of prices $\{\Price_1,\Price_2,\ldots,\Price_\CardinalityUsers\}$ is \underline{envy-free} if and only if, given a feasible allocation $\AllocationMatrix$, for every campaign $\Campaign_\CampaignIndex$:
		 $$\AllocationMatrixEntry_{*\CampaignIndex} \in \arg \max_{\AllocationMatrix' \in F} \{ v_j(\AllocationMatrixEntry_{*\CampaignIndex}') - p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}') \}$$

where $ v_j(\AllocationMatrixEntry_{*\CampaignIndex}') =
  \begin{cases} 
      \hfill \Reward_\CampaignIndex \hfill & \text{ if } \sum\limits_{\UserIndex=1}^\CardinalityUsers \AllocationMatrixEntry_{\UserIndex\CampaignIndex}' \ge \Impressions_{\CampaignIndex} \\
      \hfill 0 \hfill & \text{ otherwise } \\
  \end{cases}$
and $p_{\CampaignIndex}(\AllocationMatrixEntry_{*\CampaignIndex}') = \sum\limits_{\UserIndex=1}^\CardinalityUsers \AllocationMatrixEntry_{\UserIndex\CampaignIndex}' \Price_{\UserIndex}$.

\section*{Envy-Free prices do not exists in general}
For a given allocation there might not be a set of envy-free prices. 
For example:

\definecolor{myblue}{RGB}{80,80,160}
\definecolor{mygreen}{RGB}{80,160,80}
\definecolor{mywhite}{RGB}{255,255,255}
$$
\begin{tikzpicture}[thick,
  every node/.style={draw,circle},
  fsnode/.style={fill=myblue},
  ssnode/.style={fill=mygreen},
  every fit/.style={ellipse,draw,inner sep=10pt,text width=2cm},
  -,shorten >= 3pt,shorten <= 3pt
]

% the vertices of U
\begin{scope}[start chain=going below,node distance=7mm]
  \node[fsnode,on chain] (f1) [label=left: 2] {};
  \node[fsnode,on chain] (f2) [label=left: 2] {};
  \node[fsnode,on chain] (f3) [label=left: 2] {};
\end{scope}

% the vertices of V
\begin{scope}[xshift=5cm,yshift=-0.1cm,start chain=going below,node distance=7mm]
  \node[ssnode,on chain] (s6) [label=right: 4 - \$45] {};
  \node[ssnode,on chain] (s7) [label=right: 3 - \$30] {};
  \node[ssnode,on chain] (s8) [label=right: 1 - \$1] {};
\end{scope}

% the set U
\node [myblue,fit=(f1) (f3),label=above:\Users] {};
% the set V
\node [mygreen,fit=(s6) (s7)(s8),label=above:\Campaigns{}] {};

% the edges
\draw (f1) -- (s6) node [near start,sloped,fill=mywhite,text width=0.09cm]{1};
\draw (f2) -- (s6) node [near end,sloped,fill=mywhite,text width=0.09cm]{1};;
\draw[dotted] (f2) -- (s7);
\draw (f3) -- (s6) node [near start,sloped,fill=mywhite,text width=0.09cm]{2};
\draw[dotted] (f3) -- (s7);
\draw (f1) -- (s8) node [near start,sloped,fill=mywhite,text width=0.09cm]{1};
\end{tikzpicture}
$$

In this example the maximum rewards attainable for all campaigns is \$46 which is possible only by satisfying campaigns $\Campaign_{1}$ and $\Campaign_{3}$. 
For the efficient allocation, note that campaign $\Campaign_{2}$ cannot be satisfied because doing so would mean that $\Campaign_{1}$ could not be satisfied, but $\Campaign_{1}$ 
has a greater reward than $\Campaign_{2}$.
An efficient allocation in this case is given by the following matrix:
	\[
		\bordermatrix{&\Campaign_1 & \Campaign_2& \Campaign_3\cr
                	\User_1& 1 	&  0 	& 1 \cr
                	\User_2& 1  	&  0	& 0 \cr
                	\User_3& 2  	&  0	& 0  }
	\]

An envy-free price set does not exists in this case. 
Consider the price $\Price_1$ that has to be set for $\User_1$. This price has to be $0<\Price_1<1$ in order for $\Campaign_3$ to make a profit.  
Next, $\Price_1 = \Price_2$ or otherwise $\Campaign_1$ wish it could have gotten more from either $\User_1$ or $\User_2$. 
Also, $0<\Price_3<21.5$ or else $\Campaign_1$ does not make a profit. 
Under these conditions $\Campaign_{2}$ is envy since it could have gotten two from $\User_2$ at a price of at most $1$ and one from $\User_3$ at a price of at most $21.5$, for a bundle
that satisfies it at a price of at most $23.5$ and thus, make a profit. 

\section*{Necessary and Sufficient conditions for Envy-Free prices (when they exists)}

Given an allocation, consider the following conditions as candidates for sufficient and necessary conditions for Envy-Free prices. 
Note that these conditions apply only to satisfied campaigns. In what follows $(\User_\UserIndex, \Campaign_\CampaignIndex) \in \Edges$.

\begin{enumerate}
	\item \underline{Price indifference:} 
	If $0<\AllocationMatrixEntry_{ij}<\NumberOfUsers_\UserIndex$ and $0<\AllocationMatrixEntry_{kj}<\NumberOfUsers_k$ then $\Price_\UserIndex = \Price_k$. \\\\
	If you are allocated SOME of two markets (but not ALL and not NONE), then the prices in those two markets must be the same	
	
	\item \underline{Dominance:} 
	If $\AllocationMatrixEntry_{ij} = \NumberOfUsers_\UserIndex$ and $0<\AllocationMatrixEntry_{kj}<\NumberOfUsers_{k}$, then $\Price_{i} \le \Price_{k}.$ \\\\
	If you are allocated ALL of a market, then the price in that market can be less than the price in other markets where you are allocated SOME (or NONE, by transitivity)
	
	\item \underline{Preference:} 
	If $\AllocationMatrixEntry_{\UserIndex\CampaignIndex}=0$ and $0<\AllocationMatrixEntry_{k\CampaignIndex} <\NumberOfUsers_{k}$, then $\Price_{i}\ge \Price_{k}$\\\\
	If you are allocated SOME of a market, then the price in that market can be less than the price in other markets where you are allocated NONE
\end{enumerate}


\subsection*{Compact Condition}

The next condition imply all others (note $(\User_k, \Campaign_\CampaignIndex) \in \Edges$):
    $$\forall \User_\UserIndex,\Campaign_\CampaignIndex: \text{ If } \AllocationMatrixEntry_{\UserIndex\CampaignIndex}>0 \text{ then }\left[ \forall \User_k: \text{ If }
    		\AllocationMatrixEntry_{kj} <\NumberOfUsers_{k}   \text{ then } \Price_{i} \le\Price_{k}\right]$$
 In all markets where you are allocated NOT NOTHING in one market $i$, and NOT EVERYTHING in another market $k$, then
the price in $i$ is less than or equal to the price in $k$. \\\\

This condition implies all three conditions above.\\

\underline{Proof:} Suppose the Compact Condition holds.

\begin{enumerate}
 \item[] \underline{Price indifference:} Suposse (a) $0<\AllocationMatrixEntry_{ij}<\NumberOfUsers_\UserIndex$ and (b) $0<\AllocationMatrixEntry_{kj}<\NumberOfUsers_k$. Apply the 
 compact condition in two ways: 
 \begin{enumerate}
  \item[(1)] by (a) $0<\AllocationMatrixEntry_{ij}$ compact condition implies $ \forall \User_k: \text{ If } \AllocationMatrixEntry_{kj} <\NumberOfUsers_{k}   \text{ then } \Price_{i} \le\Price_{k}$.
 By (b) we get that $\Price_{i} \le\Price_{k}$
  \item[(2)] by (b) $0<\AllocationMatrixEntry_{kj}$ compact condition implies $ \forall \User_i: \text{ If } \AllocationMatrixEntry_{ij} <\NumberOfUsers_{i}   \text{ then } \Price_{k} \le\Price_{i}$.
 By (a) we get that $\Price_{k} \le\Price_{i}$
 \end{enumerate}
 (1) and (2) imply that $\Price_{i} = \Price_{j}$
 \item[] \underline{Dominance:} Suppose (a) $\AllocationMatrixEntry_{ij} = \NumberOfUsers_\UserIndex$ and (b) $0<\AllocationMatrixEntry_{kj}<\NumberOfUsers_{k}$. 
 Since $\NumberOfUsers_\UserIndex$ is a positive integer we have that (a) implies $\AllocationMatrixEntry_{ij} > 0$ which together with the compact condition and (b) implies $\Price_{i}\le \Price_{k}$
 \item[] \underline{Preference:} Suppose (a) $\AllocationMatrixEntry_{\UserIndex\CampaignIndex}=0$ and (b) $0<\AllocationMatrixEntry_{k\CampaignIndex} <\NumberOfUsers_{k}$.
  Since $\NumberOfUsers_\UserIndex$ is a positive integer (a) implies $\AllocationMatrixEntry_{\UserIndex\CampaignIndex}=0<\NumberOfUsers_\UserIndex$ which together with with the compact
  condition and (b) implies $\Price_{k}\le \Price_{i}$
\end{enumerate}


	
\newpage
	
\subsection*{Conditions A and B}

$$A \coloneqq \forall \Campaign_{j}: \text{ If } \AllocationMatrixEntry_{*j}>\textbf{0}\text{ then }  \sum\limits_{i=1}^\CardinalityUsers \AllocationMatrixEntry_{ij}\Price_{i} < \Reward_j$$
If you are allocated SOMETHING, then total price of all goods/users allocated to you cannot exceed your value

$$B \coloneqq \forall \Campaign_{j}:  \text{ If } \AllocationMatrixEntry_{*\CampaignIndex}=\textbf{0} \text{ then }  \forall \AllocationMatrix'\in F:
		\left[\text{ If }\sum\limits_{i=1}^\CardinalityUsers \AllocationMatrixEntry_{ij}' \ge \Impressions_j \text{ then } \sum\limits_{i=1}^\CardinalityUsers \AllocationMatrixEntry_{ij}'\Price_{i} > \Reward_j \right] $$
 If you are allocated NOTHING, then total price of all your feasible bundles must exceed your value.\\
 
 \begin{tcolorbox}[colback=green!5,colframe=green!40!black,title=Heuristic]
 Checking condition B is probably hard in general. Here is a heuristic we can use:
 \end{tcolorbox}
\begin{algorithm}
\caption{Heuristic to check envy-free-ness for campaign $\Campaign_\CampaignIndex$}
\label{DFS}
\begin{algorithmic}[1]
\Procedure{Envy-free(Market $\Market$, Campaign $\Campaign_\CampaignIndex$)}{}
\State construct priority queue $\Users_\CampaignIndex := \{\langle\User_\UserIndex,\Price_\UserIndex\rangle:(\User_\UserIndex,\Campaign_\CampaignIndex)\in \Edges\}$ priority is $\Price_\UserIndex$ in ascending order
\State bundle := 0, cost := 0
\While{ bundle $< \Impressions_\CampaignIndex$ and $U$ not empty}
\State $\User_\UserIndex = \Users.$pop
\State bundle = bundle + $\User_\UserIndex.\NumberOfUsers_\UserIndex$
\State cost = cost + $(\User_\UserIndex.\Price_\UserIndex) * (\User_\UserIndex.\NumberOfUsers_\UserIndex)$
\EndWhile
\If{ bundle $\ge \Impressions_\CampaignIndex$ and cost $<$ cost for $\Campaign_\CampaignIndex$ current bundle}
\State \textbf{return} false
\Else
\State \textbf{return} true
\EndIf
\EndProcedure
\end{algorithmic}
\end{algorithm}

The worst case performance of this heuristic is linear in the size of the user set, i.e., $O(\CardinalityUsers)$.

\subsection*{Conditions A, B and Compact Condition are sufficient for envy-free-ness.}
\underline{Proof:} 
Let $(\Users,\Campaigns,\Edges)$ be a market, $\AllocationMatrix$ be a feasible allocation and $\{\Price_1,\Price_2,\ldots,\Price_n\}$ be a set of prices for $\Users$ such that
conditions A, B and compact condition are true. Suppose that a set of envy-free prices exists.
Consider the allocation to $\Campaign_\CampaignIndex$ from $X$. There are two cases: (1) $\AllocationMatrixEntry_{*\CampaignIndex} = \textbf{0}$ or (2) 
$\AllocationMatrixEntry_{*\CampaignIndex} > \textbf{0}$.
\begin{enumerate}
 \item[(1)] Suppose $\AllocationMatrixEntry_{*\CampaignIndex} = \textbf{0}$. Consider a feasible allocation $\AllocationMatrix'$
 such that $\AllocationMatrixEntry'_{*\CampaignIndex} > \textbf{0}$ which means that $\Campaign_\CampaignIndex$ can be satisfied under $\AllocationMatrix'$, i.e., $\sum\limits_{i=1}^\CardinalityUsers \AllocationMatrixEntry_{ij}' \ge \Impressions_j$.
 Condition $B$ implies that 
 $$\sum\limits_{i=1}^\CardinalityUsers \AllocationMatrixEntry_{ij}'\Price_{i} > \Reward_j \iff p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}') > v_j(\AllocationMatrixEntry_{*\CampaignIndex}') \iff v_j(\AllocationMatrixEntry_{*\CampaignIndex}') - p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}') < 0$$ 
 which means that the maximum value of $v_j(\AllocationMatrixEntry_{*\CampaignIndex}') - p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}')$ 
 over all feasible allocations is 0.  Since $\AllocationMatrixEntry_{*\CampaignIndex} = \textbf{0}$ implies $v_j(\AllocationMatrixEntry_{*\CampaignIndex}) - p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}) = 0$, we have that $\AllocationMatrixEntry_{*\CampaignIndex} \in \arg \max\limits_{\AllocationMatrix' \in F} \{ v_j(\AllocationMatrixEntry_{*\CampaignIndex}') - p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}') \}$
\item[(2)] Suppose $\AllocationMatrixEntry_{*\CampaignIndex} > \textbf{0}$. 
Condition A implies that $$\sum\limits_{i=1}^\CardinalityUsers \AllocationMatrixEntry_{ij}\Price_{i} < \Reward_j \iff p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}) < v_j(\AllocationMatrixEntry_{*\CampaignIndex}) \iff v_j(\AllocationMatrixEntry_{*\CampaignIndex}) - p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}) > 0$$
In particular this means that $\max\limits_{\AllocationMatrix' \in F} \{ v_j(\AllocationMatrixEntry_{*\CampaignIndex}') - p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}') \} > 0$.\\
Now, suppose for a contradiction that 
$$\AllocationMatrixEntry_{*\CampaignIndex} \notin \arg \max_{\AllocationMatrix' \in F} \{ v_j(\AllocationMatrixEntry_{*\CampaignIndex}') - p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}') \}$$
By assumption there exists a feasible allocation $Y \in F$ such that 
$$y_{*\CampaignIndex} \in \arg \max_{\AllocationMatrix' \in F} \{ v_j(\AllocationMatrixEntry_{*\CampaignIndex}') - p_\CampaignIndex(\AllocationMatrixEntry_{*\CampaignIndex}') \}$$
 If $Y$ satisfies condition A and compact condition, then we are done. Otherwise, suppose it does not satifies either condition A or compact condition.
\end{enumerate}


\newpage
\subsection*{Single user-impression market}

\begin{tcolorbox}[colback=green!5,colframe=green!40!black,title=Definition: single user-impression market]
A single user-impression market is a market where $\forall \UserIndex: \NumberOfUsers_\UserIndex = 1$ and $\forall \CampaignIndex: \Impressions_\CampaignIndex = 1$.
\end{tcolorbox}

In this case condition B reduces to the following linear condition:
$$B \coloneqq \forall \Campaign_{j}: \text{ If }  \AllocationMatrixEntry_{*\CampaignIndex} = \textbf{0} \text{ then }\forall \User_{i}: \text{ If } (\User_\UserIndex,\Campaign_\CampaignIndex)\in\Edges \text{ then } \Price_i \ge \Reward_j $$

\begin{tcolorbox}[colback=green!5,colframe=green!40!black,title=Theorem]
 Given an allocation for a single user-impression market, a set of envy-free prices always exists. 
 \end{tcolorbox}
\underline{Proof:} 
Let $\Reward_{low}$ be the lowest reward of any allocated campaign.
Set all prices of allocated users to $\Reward_{low}$ and the price of non-allocated users to the highest reward over all campaigns. 
This is an envy-free price assignment because (1) any non-allocated campaign would have a reward less than any of the prices and thus it would be unsatisfiable,
and (2) any allocated campaign would have a reward at least as big as $\Reward_{low}$ and thus, it would be satisfied with no envy since all prices are the same. $\square$

\subsubsection*{Envy-free price ranges for efficient allocation in single user-impression market}
Let $\Reward_{low}$ be the lowest reward of any allocated campaign and let $\Reward_{high}$ be the highest reward of any non-allocated campaign.
Either $\Reward_{low} \ge \Reward_{high}$ or not. Let us look at each of these cases:

\begin{enumerate}
 \item Suppose $\Reward_{low} \ge \Reward_{high}$. 
 
 %Let $\Reward_1$ be the higest reward among all allocated campaigns, $\Reward_2$ the second higest reward
 %among all allocated campaigns, and so on, so that the sequence $\Reward_1,\Reward_2,\ldots,\Reward_{low}$ represents the rewards of all allocated campaings in 
 %descending order. Let $\User_1,\User_2,\ldots,\User_{low}$ be the users allocated to each of these campaings. An envy-free price assigment is given by setting
 %the price $\Price_i$ of $\User_i$ such that $\Price_i \in [\Reward_{i+1},\Reward_i]$. Note that the price $\Price_{low} \in [\Reward_{high},\Reward_{low}]$. Set all the prices of non-allocated
 %campaings to be in the range $[\Reward_{low},\Reward_1]$.
 
 %That this is an envy-free price assignment
 %follows because (1) any non-allocated campaign would have a reward less than any of the prices and thus it would be unsatisfiable and (2)
 %any allocated campaign .\\\\

 \item Otherwise, $\Reward_{low} < \Reward_{high}$, means that there exists a campaign $\Campaign_{high}$ with no allocation but reward $\Reward_{high}$ that is bigger
 than the reward of some allocated campaigns. 
 In this case there exists at least one other allocated campaign $\Campaign_k$ with access to the same users as 
 $\Reward_{high}$ and such that $\Reward_k > R_{high}$, or otherwise the efficient allocation would have allocated to $\Campaign_{high}$ instead of $\Campaign_k$.
 Set the price of the user $\User$ allocated to $\Campaign_k$ to be in the range $(\Reward_{high},\Reward_k]$ so that $\Campaign_{high}$ do not wish it had
 been allocated from $\User$.
\end{enumerate}





\newpage

\subsection*{Appendix}


\subsection*{Necessity}
\subsubsection*{All three conditions, preference, dominance and indifference, are necessary}

The following proof is written specifically for Preference, but the same idea holds for Price indifference and Dominance.

\underline{Proof:} Let $(\Users,\Campaigns,\Edges)$ be a market, $\AllocationMatrix$ be an allocation and $\{\Price_1,\Price_2,\ldots,\Price_n\}$ be a set of envy-free prices for $\AllocationMatrix$. 
		    Consider users $\User_i,\User_k \in  \Users$ and campaign $\Campaign_j \in \Campaigns$ such that $(\User_i, \Campaign_j) \in \Edges$
		    and $\AllocationMatrixEntry_{ij} = 0$ and $\AllocationMatrixEntry_{kj} > 0$. Suppose for a contradiction that $\Price_i <  \Price_k$, then $\Campaign_j$ is not happy with the bundle $\AllocationMatrixEntry_{*\CampaignIndex}$
		    it received since the bundle $\AllocationMatrixEntry_{*\CampaignIndex}'$, constructed as follow, is better: 
		     interchange one user class $\User_i$ with one of user class $\User_k$, i.e. $\AllocationMatrixEntry_{ij}'=1$, $\AllocationMatrixEntry_{kj}' = \AllocationMatrixEntry_{kj}-1$, and
		     otherwise select the rest from the original bundle: $\AllocationMatrixEntry_{li}' = \AllocationMatrixEntry_{li}$.\\
		     Now, bundle $\AllocationMatrixEntry_{*\CampaignIndex}'$ contains the same number of user classes as bundle $\AllocationMatrixEntry_{*\CampaignIndex}$, so if $\AllocationMatrixEntry_{*\CampaignIndex}$ satisfies $\Campaign_j$ then so does $\AllocationMatrixEntry_{*\CampaignIndex}'$, thus,
		     $v_j\left(\AllocationMatrixEntry_{*\CampaignIndex}\right) = v_j\left(\AllocationMatrixEntry_{*\CampaignIndex}'\right) = \Reward_j$. 
		     However, the price of the new bundle is less than the price of the original bundle since:
	$$\begin{tabular}{llll}
		$p_j\left(\AllocationMatrixEntry_{*\CampaignIndex}'\right) = \sum\limits_{t=1}^\CardinalityUsers \AllocationMatrixEntry_{tj}'\Price_t $ & $=$ & $ \AllocationMatrixEntry_{1j}'\Price_1 + \cdots + \AllocationMatrixEntry_{kj}'\Price_{k} + \cdots + \AllocationMatrixEntry_{ij}'\Price_{i} + \cdots + \AllocationMatrixEntry_{nj}'\Price_{n}$ \\
									& $=$ & $ \AllocationMatrixEntry_{1j}\Price_1 + \cdots + (\AllocationMatrixEntry_{kj}-1)\Price_{k} + \cdots + \Price_{i} + \cdots + \AllocationMatrixEntry_{nj}\Price_{n}$ \\
									& $=$ & $ \AllocationMatrixEntry_{1j}\Price_1 + \cdots + \AllocationMatrixEntry_{kj}\Price_{k} - \Price_{k} \cdots + \Price_{i} + \cdots + \AllocationMatrixEntry_{nj}\Price_{n}$ \\
									& $<$ & $ \AllocationMatrixEntry_{1j}\Price_1 + \cdots + \AllocationMatrixEntry_{kj}\Price_{k} + \cdots + 0\Price_{i} + \cdots + \AllocationMatrixEntry_{nj}\Price_{n}$  & since \Price$_i < $ \Price$_k$ \\
									& $=$ & $ \sum\limits_{t=1}^\CardinalityUsers x_{tj}\Price_t$ \\
									& $=$ & $ p_j\left(\AllocationMatrixEntry_{*\CampaignIndex}\right)$ \\
	  \end{tabular}$$
	    So, $p_j\left(\AllocationMatrixEntry_{*\CampaignIndex}'\right) < p_j\left(\AllocationMatrixEntry_{*\CampaignIndex}\right)$. Since the rewards are the same for each bundle it follows that $\Campaign_j$ is better off (maximizes profit)
	    using bundle $\AllocationMatrixEntry_{*\CampaignIndex}'$. This contradicts our assumption that $\{\Price_1,\Price_2,\ldots,\Price_n\}$ is a set of envy-free prices. $\square$

\subsection*{Sufficiency}

None of the conditions are sufficient in isolation:
\subsubsection*{Preference is not sufficient}
\underline{Counterexample:} Consider the following market $(\Users,\Campaigns,\Edges)$, with $\Users =(\User_1 = (F, 12),\User_2 = (FY, 1))$ 
and $\Campaigns =(\Campaign_1 = (F, 2,100),\Campaign_2 = (FY, 2,10))$, and the following efficient allocation:
\[
		\bordermatrix{&\Campaign_1 & \Campaign_2\cr
                	\User_1& 0 	&  0 \cr
                	\User_2& 2  	&  0 }
	\]
	The set of prices $\{\Price_1 = 12, \Price_2 = 1\}$ satisfy the preference condition:
	\begin{enumerate}
	 \item $\Campaign_1$ is such that $(\User_{1},\Campaign_{1}) \in \Edges$ and $x_{11} = 0$ and $x_{21} =2 > 0$ and $\Price_{1} > \Price_{2}$
	 \item $\Campaign_2$ there is no $\User_{k}$ such that $\AllocationMatrixEntry_{k2}>0$, so preference is trivially satisfied.
	\end{enumerate}

	However, campaign $\Campaign_{2}$ is not envy-free since it could have made a profit by acquiring two of $\User_{2}$ 
	Hence, preference is not a sufficient condition for envy-free prices.

	\subsubsection*{Indifference is not sufficient}
\underline{Counterexample:} Consider the following market $(\Users,\Campaigns,\Edges)$, with 
     $\Users =(\User_1 = (FYL, 2), \User_2 = (FYH, 2)), \User_3 = (MYH, 1))$ 
and  $\Campaigns =(\Campaign_1 = (FYL, 1,10),\Campaign_2 = (Y, 2,10), \Campaign_3 = (FYH, 1,10)), \Campaign_4 = (MYH, 1,3))$, and the following efficient allocation:
\[
		\bordermatrix{&		\Campaign_1 & \Campaign_2& \Campaign_3& \Campaign_4\cr
                	\User_1	& 1 		&  1 		& 0 		& 0 \cr
                	\User_2	& 0  		&  1		& 1 		& 0 \cr
                	\User_3	& 0		&  0		& 0 		& 1}
	\]
	The set of prices $\{\Price_1 = 2, \Price_2 = 2, \Price_1 = 1\}$ satisfy the indifference condition. Note that we need to check only $\Campaign_{2}$ since it is the only
	one that satisfies the conditions of indifference.\\\\
	Campaign $\Campaign_2$ is such that $0<\AllocationMatrixEntry_{12} = 1 < \NumberOfUsers_{1} = 2$ and $0<\AllocationMatrixEntry_{22} = 1 < \NumberOfUsers_{2} = 2$ and $\Price_1 = \Price_2$. However, this campaign is not envy-free since it
	 could have acquired one of $\User_{3}$ for a cheaper price. 
	 Hence, indifference is not a sufficient condition for envy-free prices.

\subsubsection*{Dominance is not sufficient}
\underline{Counterexample:} Consider the following market $(\Users,\Campaigns,\Edges)$, with $\Users =(\User_1 = (F, 2),\User_2 = (FY, 1))$ 
and  $\Campaigns =(\Campaign_1 = (F, 2,100),\Campaign_2 = (FY, 1,10))$, and the following efficient allocation:
\[
		\bordermatrix{&\Campaign_1 & \Campaign_2\cr
                	\User_1& 1 	&  0 \cr
                	\User_2& 1  	&  0 }
	\]
	The set of prices $\{\Price_1 = 12, \Price_2 = 9\}$ satisfy the dominance condition:
	\begin{enumerate}
	 \item $\Campaign_1$ is such that $\AllocationMatrixEntry_{21} = \NumberOfUsers_2$ and $\AllocationMatrixEntry_{11} = 1 > 0$ and $\Price_{2} < \Price_{1}$
	 \item $\Campaign_2$ there is no $\User_{k}$ such that $\AllocationMatrixEntry_{k2} = \NumberOfUsers_k$, so dominance is trivially satisfied.
	\end{enumerate}

	However, campaign $\Campaign_{2}$ is not envy-free since it could have made a profit by acquiring one of $\User_{2}$ 
	Hence, dominance is not a sufficient condition for envy-free prices.


\subsection*{Compact Condition}

This condition is \underline{necessary}. The idea of the proof is the same as the proof for Preference: 
Let $(\Users,\Campaigns,\Edges)$ be a market, $X$ be an allocation and $\{\Price_1,\Price_2,\ldots,\Price_n\}$ be a set of envy-free prices for $\AllocationMatrix$.
Suppose for a contradiction that the Compact Condition does not hold. Then, using the negation of this condition:

  $$\exists \User_i,\Campaign_j: \AllocationMatrixEntry_{ij}>0 \text{ and } \left[\exists \User_k: (\User_k, \Campaign_j) \in \Edges \text{ and } \AllocationMatrixEntry_{kj} < \NumberOfUsers_{k}\text{ but } \Price_i>\Price_k\right]$$

construct a bundle for $\Campaign_{j}$
that is better than the current bundle thereby contradicting envy-freeness.\\

This condition is not \underline{sufficient}. \\
\underline{Counterexample:}
Consider the following market $(\Users,\Campaigns,\Edges)$, with $\Users =(\User_1 = (F, 2),\User_2 = (FY, 1))$ 
and $\Campaigns =(\Campaign_1 = (F, 2,100),\Campaign_2 = (FY, 1,10))$, and the following efficient allocation:
\[
		\bordermatrix{&\Campaign_1 & \Campaign_2\cr
                	\User_1& 1 	&  0 \cr
                	\User_2& 1  	&  0 }
	\]

	The set of prices $\{P_1 = 12, P_2 = 9\}$ trivially satisfy the compact condition.
	However, campaign $\Campaign_{2}$ is not envy-free since it could have made a profit by acquiring one of $\User_{2}$ 
	Hence, the compact condition is not a sufficient condition for envy-free prices.

\subsection*{Conditions ALL and NONE}

\begin{enumerate}
 \item \underline{ALL}:
 $\forall \Campaign_{j},\User_{i}: \text{ If } \AllocationMatrixEntry_{ij} = \NumberOfUsers_{i} \text{ then } 
 \left[\forall \User_{k}: \text{ if } 0<\AllocationMatrixEntry_{kj}< \NumberOfUsers_{k} \text{ then } \Price_i \le \Price_k \right]$.
\item \underline{NONE}:
 $\forall \Campaign_{j},\User_{i}: \text{ If } 0 < \AllocationMatrixEntry_{ij} < \NumberOfUsers_{i} \text{ then } 
 \left[\forall \User_{k}: \text{ if } (\User_{k},\Campaign_{j})\in\Edges \text{ and } \AllocationMatrixEntry_{kj} = 0  \text{ then } \Price_i \le \Price_k \right]$.
\end{enumerate}
	
In plain English these two conditions state:

\begin{enumerate}
 \item \underline{ALL}: the price of any market where you get all of the supply should be less than or equal to the price of any market where you get strictly less than all of the supply.
 \item \underline{NONE}: the price of any market where you get some of the supply should be less than or equal to the price of any market where you get none of the supply.
\end{enumerate}

These conditions are not sufficient: Consider the following market $(\Users,\Campaigns,\Edges)$, with 
     $\Users =(\User_1 = (FYL, 2), \User_2 = (FYH, 1)), \User_3 = (MYH, 1), \User_4 = (MYL,1))$ 
and  $\Campaigns =(\Campaign_1 = (FY, 2, 100),\Campaign_2 = (YH, 2, 10), \Campaign_3 = (MY, 2, 5)))$, and the following efficient allocation:
\[
		\bordermatrix{&		\Campaign_1 & \Campaign_2& \Campaign_3\cr
                	\User_1	& 1 		&  0 		& 0 	\cr
                	\User_2	& 1  		&  0		& 0 	\cr
                	\User_3	& 0  		&  0		& 1 	\cr
                	\User_4	& 0		&  0		& 1 	}
	\]
  The set of prices $\{P_1 = 10, P_2 = 1, P_3 = 1, P_4 = 2\}$ satisfy both ALL and NONE. However, campaign $\Campaign_{2}$ is not envy-free since it could have made a 
  profit by acquiring one of $\User_{2}$ and one of $\User_{3}$.


\end{document}

